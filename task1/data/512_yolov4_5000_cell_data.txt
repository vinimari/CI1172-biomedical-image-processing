 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 265, FP = 123) 

 for conf_thresh = 0.00, TP = 265, FP = 123, FN = 6, average IoU = 52.99 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 253, FP = 67) 

 for conf_thresh = 0.05, TP = 253, FP = 67, FN = 18, average IoU = 61.67 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 251, FP = 56) 

 for conf_thresh = 0.10, TP = 251, FP = 56, FN = 20, average IoU = 63.87 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 cuDNN status Error in: file: ./src/convolutional_kernels.cu : () : line: 543 : build time: Sep 11 2021 - 16:11:33 

 cuDNN Error: CUDNN_STATUS_EXECUTION_FAILED
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 247, FP = 44) 

 for conf_thresh = 0.20, TP = 247, FP = 44, FN = 24, average IoU = 66.30 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 244, FP = 40) 

 for conf_thresh = 0.25, TP = 244, FP = 40, FN = 27, average IoU = 67.11 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 243, FP = 39) 

 for conf_thresh = 0.30, TP = 243, FP = 39, FN = 28, average IoU = 67.36 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 243, FP = 37) 

 for conf_thresh = 0.35, TP = 243, FP = 37, FN = 28, average IoU = 67.84 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 241, FP = 37) 

 for conf_thresh = 0.40, TP = 241, FP = 37, FN = 30, average IoU = 67.77 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 238, FP = 34) 

 for conf_thresh = 0.45, TP = 238, FP = 34, FN = 33, average IoU = 68.62 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 238, FP = 32) 

 for conf_thresh = 0.50, TP = 238, FP = 32, FN = 33, average IoU = 69.13 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 238, FP = 32) 

 for conf_thresh = 0.55, TP = 238, FP = 32, FN = 33, average IoU = 69.13 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 234, FP = 31) 

 for conf_thresh = 0.60, TP = 234, FP = 31, FN = 37, average IoU = 69.31 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 231, FP = 29) 

 for conf_thresh = 0.65, TP = 231, FP = 29, FN = 40, average IoU = 69.82 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 228, FP = 26) 

 for conf_thresh = 0.70, TP = 228, FP = 26, FN = 43, average IoU = 70.74 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 225, FP = 24) 

 for conf_thresh = 0.75, TP = 225, FP = 24, FN = 46, average IoU = 71.30 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 225, FP = 24) 

 for conf_thresh = 0.80, TP = 225, FP = 24, FN = 46, average IoU = 71.30 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 222, FP = 22) 

 for conf_thresh = 0.85, TP = 222, FP = 22, FN = 49, average IoU = 72.05 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 219, FP = 21) 

 for conf_thresh = 0.90, TP = 219, FP = 21, FN = 52, average IoU = 72.40 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
 CUDNN_HALF=1 
net.optimized_memory = 0 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
Create CUDA-stream - 0 
 Create cudnn-handle 0 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 
nms_kind: greedynms (1), beta = 0.600000 

 seen 64, trained: 640 K-images (10 Kilo-batches_64) 

 Detection layer: 139 - type = 28 
 Detection layer: 150 - type = 28 
 Detection layer: 161 - type = 28 

 detections_count = 388, unique_truth_count = 271  
 rank = 0 of ranks = 388  rank = 100 of ranks = 388  rank = 200 of ranks = 388  rank = 300 of ranks = 388 class_id = 0, name = celulas, ap = 92.84%   	 (TP = 214, FP = 16) 

 for conf_thresh = 0.95, TP = 214, FP = 16, FN = 57, average IoU = 74.01 % 

 IoU threshold =  0 %, used Area-Under-Curve for each unique Recall 

Set -points flag:
 `-points 101` for MS COCO 
 `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) 
 `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset
